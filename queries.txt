CREATE TABLE admins (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE class (
    id SERIAL PRIMARY KEY,
    class_name VARCHAR(255) NOT NULL,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE student (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    is_class_mayor BOOLEAN DEFAULT FALSE,
    class_id INTEGER REFERENCES class(id),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE student ADD COLUMN student_id_image VARCHAR(50);
ALTER TABLE student ADD COLUMN id_num VARCHAR(50);
ALTER TABLE student ADD COLUMN middle_initial VARCHAR(10);
ALTER TABLE student ADD COLUMN department VARCHAR(255);
ALTER TABLE student ADD COLUMN program VARCHAR(255);
ALTER TABLE student ADD COLUMN year_level VARCHAR(10);
ALTER TABLE student ADD COLUMN sex VARCHAR(10);
ALTER TABLE student ADD COLUMN contact_number VARCHAR(20);
ALTER TABLE student ADD COLUMN address TEXT;



CREATE TABLE counselor (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    is_available BOOLEAN DEFAULT TRUE,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE counselor ADD COLUMN contact_number VARCHAR(20);
ALTER TABLE counselor ADD COLUMN position VARCHAR(255);
ALTER TABLE counselor ADD COLUMN educational_attainment VARCHAR(255);


CREATE TABLE forum (
    id SERIAL PRIMARY KEY,
    student_id INTEGER REFERENCES student(id),
    title VARCHAR(255),
    content TEXT,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE forum_comment (
    id SERIAL PRIMARY KEY,
    forum_id INTEGER REFERENCES forum(id),
    student_id INTEGER REFERENCES student(id),
    comment TEXT,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE mood (
    id SERIAL PRIMARY KEY,
    emotion VARCHAR(255),
    student_id INTEGER REFERENCES student(id),
    title VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE appointment (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    student_id INTEGER REFERENCES student(id),
    counselor_id INTEGER REFERENCES counselor(id),
    status VARCHAR(100),
    is_online_appointment boolean,
    appointment_number text,
    appointment_date TIMESTAMP,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE counselor_availability (
    id SERIAL PRIMARY KEY,                       
    counselor_id INT NOT NULL,                   
    available_day VARCHAR(20) NOT NULL,          
    FOREIGN KEY (counselor_id) REFERENCES counselor(id)
);

CREATE TABLE forum_comment_reply (
  id SERIAL PRIMARY KEY,
  comment_id INTEGER REFERENCES forum_comment(id) ON DELETE CASCADE,
  student_id INTEGER REFERENCES student(id) ON DELETE SET NULL,
  reply TEXT NOT NULL,
  create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE messages (
    id SERIAL PRIMARY KEY,
    appointment_id INTEGER REFERENCES appointment(id) ON DELETE CASCADE,
    sender_type VARCHAR(20) NOT NULL CHECK (sender_type IN ('student', 'counselor')),
    message TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE psycho_tests (
  id SERIAL PRIMARY KEY,
  test_title VARCHAR(255) NOT NULL,
  student_id INTEGER NOT NULL,
  counselor_id INTEGER NOT NULL,
  test_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  test_number VARCHAR(100) UNIQUE NOT NULL,
  is_online_test BOOLEAN DEFAULT TRUE,
  status VARCHAR(50) DEFAULT 'pending',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE psycho_tests
  ADD CONSTRAINT fk_student
    FOREIGN KEY (student_id) REFERENCES student(id)
    ON DELETE CASCADE;

ALTER TABLE psycho_tests
  ADD CONSTRAINT fk_counselor
    FOREIGN KEY (counselor_id) REFERENCES counselor(id)
    ON DELETE CASCADE;

ALTER TABLE psycho_tests
ADD COLUMN class_id INTEGER;

ALTER TABLE psycho_tests
ADD CONSTRAINT fk_class
FOREIGN KEY (class_id) REFERENCES class(id)
ON DELETE SET NULL;


CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) UNIQUE NOT NULL
);

CREATE TABLE resources (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    category_id INT REFERENCES categories(id),
    read_time VARCHAR(50),
    pdf_link TEXT,
    details_link TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE departments (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT
);


CREATE TABLE programs (
    id SERIAL PRIMARY KEY,
    department_id INT NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    FOREIGN KEY (department_id) REFERENCES departments(id) ON DELETE CASCADE
);






ALTER TABLE student ADD COLUMN department_id INTEGER;
ALTER TABLE student ADD COLUMN program_id INTEGER;


ALTER TABLE student
    ADD CONSTRAINT fk_department FOREIGN KEY (department_id) REFERENCES departments(id),
    ADD CONSTRAINT fk_program FOREIGN KEY (program_id) REFERENCES programs(id);

ALTER TABLE student DROP COLUMN department;
ALTER TABLE student DROP COLUMN program;

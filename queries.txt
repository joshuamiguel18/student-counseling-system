CREATE TABLE admins (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE class (
    id SERIAL PRIMARY KEY,
    class_name VARCHAR(255) NOT NULL,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE student (
    id SERIAL PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    is_class_mayor BOOLEAN DEFAULT FALSE,
    class_id INTEGER REFERENCES class(id),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE counselor (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    is_available BOOLEAN DEFAULT TRUE,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE forum (
    id SERIAL PRIMARY KEY,
    student_id INTEGER REFERENCES student(id),
    title VARCHAR(255),
    content TEXT,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE forum_comment (
    id SERIAL PRIMARY KEY,
    forum_id INTEGER REFERENCES forum(id),
    student_id INTEGER REFERENCES student(id),
    comment TEXT,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE mood (
    id SERIAL PRIMARY KEY,
    emotion VARCHAR(255),
    student_id INTEGER REFERENCES student(id),
    title VARCHAR(255),
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE appointment (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    student_id INTEGER REFERENCES student(id),
    counselor_id INTEGER REFERENCES counselor(id),
    status VARCHAR(100),
    appointment_date TIMESTAMP,
    create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE counselor_availability (
    id SERIAL PRIMARY KEY,                       
    counselor_id INT NOT NULL,                   
    available_day VARCHAR(20) NOT NULL,          
    FOREIGN KEY (counselor_id) REFERENCES counselor(id)
);

